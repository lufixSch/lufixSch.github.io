import{S as Xt,i as Yt,s as Zt,w as ut,x as eo,y as to,z as oo,A as ao,B as zt,r as so,v as lo,C as no,D as Jt,e as a,t as n,a as m,c as s,b as l,d as r,f as o,g as v,h as L,E as f,j as p,k as e,n as ro}from"./index.e23b10ae.js";import{A as io}from"./article.e19d21fa.js";function co(k){let c,A,b,x,u,h,E,Se,se,Ne,De,de,T,D,le,Ce,ge,ne,g,Le,ke,he,F,Te,Ee,I,Fe,me,O,re,Ie,ve,M,Oe,Ae,d,Me,ie,qe,Be,ce,$e,je,pe,Re,He,ue,We,be,q,Ue,xe,w,S,C,B,Ge,$,Ke,j,Qe,ze,y,R,Je,H,Ve,W,Xe,U,Ye,G,Ze,et,_,K,tt,Q,ot,z,at,J,st,V,lt,X,nt,Y,rt,Z,it,ee,ct,ye,te,fe,pt;return{c(){c=a("h1"),A=n("AutoLLaMa (An Oobabooga text-generation-webui Extension)"),b=m(),x=a("p"),u=n("Run an Agent in the background which uses different tools to solve a given problem/question."),h=m(),E=a("p"),Se=n("The Agent is triggered in the Chat mode by starting a message with "),se=a("code"),Ne=n("/do"),De=n(". The Agent will then use the provided tools to solve the given problem and will add the results to the chat context."),de=m(),T=a("blockquote"),D=a("p"),le=a("strong"),Ce=n("⚠️ WARNING: This project is currently stalled!"),ge=n(`
I’m working on a clean implementation of ideas and concepts from this project and more in `),ne=a("em"),g=a("a"),Le=n("lufixSch/auto_llama"),ke=n("."),he=m(),F=a("h2"),Te=n("Tools"),Ee=m(),I=a("h3"),Fe=n("Existing Tools"),me=m(),O=a("ul"),re=a("li"),Ie=n("Wikipedia"),ve=m(),M=a("h3"),Oe=n("Adding Tools"),Ae=m(),d=a("p"),Me=n("New tools can be added by creating a new class which extends the "),ie=a("code"),qe=n("LLMInterface"),Be=n(" class in the "),ce=a("code"),$e=n("llm"),je=n(" module. An instance of the new class must be added to the list of "),pe=a("code"),Re=n("tools"),He=n(" in "),ue=a("code"),We=n("script.py"),be=m(),q=a("h2"),Ue=n("Installation"),xe=m(),w=a("pre"),S=a("code"),C=a("span"),B=a("span"),Ge=n("cd"),$=a("span"),Ke=n(" "),j=a("span"),Qe=n("extensions"),ze=n(`
`),y=a("span"),R=a("span"),Je=n("clone"),H=a("span"),Ve=n(" "),W=a("span"),Xe=n("https://github.com/lufixSch/text_generation_webui_auto_llama_.git"),U=a("span"),Ye=n(" "),G=a("span"),Ze=n("auto_llama"),et=n(`
`),_=a("span"),K=a("span"),tt=n("python"),Q=a("span"),ot=n(" "),z=a("span"),at=n("server.py"),J=a("span"),st=n(" "),V=a("span"),lt=n("--extensions"),X=a("span"),nt=n(" "),Y=a("span"),rt=n("auto_llama"),Z=a("span"),it=n(" "),ee=a("span"),ct=n("api"),ye=m(),te=a("blockquote"),fe=a("p"),pt=n("AutoLLaMa requires the API to be active. Make sure the API extension is enabled"),this.h()},l(t){c=s(t,"H1",{});var i=l(c);A=r(i,"AutoLLaMa (An Oobabooga text-generation-webui Extension)"),i.forEach(o),b=v(t),x=s(t,"P",{});var ft=l(x);u=r(ft,"Run an Agent in the background which uses different tools to solve a given problem/question."),ft.forEach(o),h=v(t),E=s(t,"P",{});var Pe=l(E);Se=r(Pe,"The Agent is triggered in the Chat mode by starting a message with "),se=s(Pe,"CODE",{});var _t=l(se);Ne=r(_t,"/do"),_t.forEach(o),De=r(Pe,". The Agent will then use the provided tools to solve the given problem and will add the results to the chat context."),Pe.forEach(o),de=v(t),T=s(t,"BLOCKQUOTE",{});var dt=l(T);D=s(dt,"P",{});var _e=l(D);le=s(_e,"STRONG",{});var ht=l(le);Ce=r(ht,"⚠️ WARNING: This project is currently stalled!"),ht.forEach(o),ge=r(_e,`
I’m working on a clean implementation of ideas and concepts from this project and more in `),ne=s(_e,"EM",{});var Et=l(ne);g=s(Et,"A",{href:!0,rel:!0});var mt=l(g);Le=r(mt,"lufixSch/auto_llama"),mt.forEach(o),Et.forEach(o),ke=r(_e,"."),_e.forEach(o),dt.forEach(o),he=v(t),F=s(t,"H2",{});var vt=l(F);Te=r(vt,"Tools"),vt.forEach(o),Ee=v(t),I=s(t,"H3",{});var At=l(I);Fe=r(At,"Existing Tools"),At.forEach(o),me=v(t),O=s(t,"UL",{});var bt=l(O);re=s(bt,"LI",{});var xt=l(re);Ie=r(xt,"Wikipedia"),xt.forEach(o),bt.forEach(o),ve=v(t),M=s(t,"H3",{});var yt=l(M);Oe=r(yt,"Adding Tools"),yt.forEach(o),Ae=v(t),d=s(t,"P",{});var N=l(d);Me=r(N,"New tools can be added by creating a new class which extends the "),ie=s(N,"CODE",{});var Pt=l(ie);qe=r(Pt,"LLMInterface"),Pt.forEach(o),Be=r(N," class in the "),ce=s(N,"CODE",{});var wt=l(ce);$e=r(wt,"llm"),wt.forEach(o),je=r(N," module. An instance of the new class must be added to the list of "),pe=s(N,"CODE",{});var St=l(pe);Re=r(St,"tools"),St.forEach(o),He=r(N," in "),ue=s(N,"CODE",{});var Nt=l(ue);We=r(Nt,"script.py"),Nt.forEach(o),N.forEach(o),be=v(t),q=s(t,"H2",{});var Dt=l(q);Ue=r(Dt,"Installation"),Dt.forEach(o),xe=v(t),w=s(t,"PRE",{class:!0,style:!0,tabindex:!0});var Ct=l(w);S=s(Ct,"CODE",{});var oe=l(S);C=s(oe,"SPAN",{class:!0});var we=l(C);B=s(we,"SPAN",{style:!0});var gt=l(B);Ge=r(gt,"cd"),gt.forEach(o),$=s(we,"SPAN",{style:!0});var Lt=l($);Ke=r(Lt," "),Lt.forEach(o),j=s(we,"SPAN",{style:!0});var kt=l(j);Qe=r(kt,"extensions"),kt.forEach(o),we.forEach(o),ze=r(oe,`
`),y=s(oe,"SPAN",{class:!0});var ae=l(y);R=s(ae,"SPAN",{style:!0});var Tt=l(R);Je=r(Tt,"clone"),Tt.forEach(o),H=s(ae,"SPAN",{style:!0});var Ft=l(H);Ve=r(Ft," "),Ft.forEach(o),W=s(ae,"SPAN",{style:!0});var It=l(W);Xe=r(It,"https://github.com/lufixSch/text_generation_webui_auto_llama_.git"),It.forEach(o),U=s(ae,"SPAN",{style:!0});var Ot=l(U);Ye=r(Ot," "),Ot.forEach(o),G=s(ae,"SPAN",{style:!0});var Mt=l(G);Ze=r(Mt,"auto_llama"),Mt.forEach(o),ae.forEach(o),et=r(oe,`
`),_=s(oe,"SPAN",{class:!0});var P=l(_);K=s(P,"SPAN",{style:!0});var qt=l(K);tt=r(qt,"python"),qt.forEach(o),Q=s(P,"SPAN",{style:!0});var Bt=l(Q);ot=r(Bt," "),Bt.forEach(o),z=s(P,"SPAN",{style:!0});var $t=l(z);at=r($t,"server.py"),$t.forEach(o),J=s(P,"SPAN",{style:!0});var jt=l(J);st=r(jt," "),jt.forEach(o),V=s(P,"SPAN",{style:!0});var Rt=l(V);lt=r(Rt,"--extensions"),Rt.forEach(o),X=s(P,"SPAN",{style:!0});var Ht=l(X);nt=r(Ht," "),Ht.forEach(o),Y=s(P,"SPAN",{style:!0});var Wt=l(Y);rt=r(Wt,"auto_llama"),Wt.forEach(o),Z=s(P,"SPAN",{style:!0});var Ut=l(Z);it=r(Ut," "),Ut.forEach(o),ee=s(P,"SPAN",{style:!0});var Gt=l(ee);ct=r(Gt,"api"),Gt.forEach(o),P.forEach(o),oe.forEach(o),Ct.forEach(o),ye=v(t),te=s(t,"BLOCKQUOTE",{});var Kt=l(te);fe=s(Kt,"P",{});var Qt=l(fe);pt=r(Qt,"AutoLLaMa requires the API to be active. Make sure the API extension is enabled"),Qt.forEach(o),Kt.forEach(o),this.h()},h(){L(g,"href","https://github.com/lufixSch/auto_llama"),L(g,"rel","nofollow"),f(B,"color","#88C0D0"),f($,"color","#D8DEE9FF"),f(j,"color","#A3BE8C"),L(C,"class","line"),f(R,"color","#88C0D0"),f(H,"color","#D8DEE9FF"),f(W,"color","#A3BE8C"),f(U,"color","#D8DEE9FF"),f(G,"color","#A3BE8C"),L(y,"class","line"),f(K,"color","#88C0D0"),f(Q,"color","#D8DEE9FF"),f(z,"color","#A3BE8C"),f(J,"color","#D8DEE9FF"),f(V,"color","#A3BE8C"),f(X,"color","#D8DEE9FF"),f(Y,"color","#A3BE8C"),f(Z,"color","#D8DEE9FF"),f(ee,"color","#A3BE8C"),L(_,"class","line"),L(w,"class","shiki nord"),f(w,"background-color","#2e3440ff"),L(w,"tabindex","0")},m(t,i){p(t,c,i),e(c,A),p(t,b,i),p(t,x,i),e(x,u),p(t,h,i),p(t,E,i),e(E,Se),e(E,se),e(se,Ne),e(E,De),p(t,de,i),p(t,T,i),e(T,D),e(D,le),e(le,Ce),e(D,ge),e(D,ne),e(ne,g),e(g,Le),e(D,ke),p(t,he,i),p(t,F,i),e(F,Te),p(t,Ee,i),p(t,I,i),e(I,Fe),p(t,me,i),p(t,O,i),e(O,re),e(re,Ie),p(t,ve,i),p(t,M,i),e(M,Oe),p(t,Ae,i),p(t,d,i),e(d,Me),e(d,ie),e(ie,qe),e(d,Be),e(d,ce),e(ce,$e),e(d,je),e(d,pe),e(pe,Re),e(d,He),e(d,ue),e(ue,We),p(t,be,i),p(t,q,i),e(q,Ue),p(t,xe,i),p(t,w,i),e(w,S),e(S,C),e(C,B),e(B,Ge),e(C,$),e($,Ke),e(C,j),e(j,Qe),e(S,ze),e(S,y),e(y,R),e(R,Je),e(y,H),e(H,Ve),e(y,W),e(W,Xe),e(y,U),e(U,Ye),e(y,G),e(G,Ze),e(S,et),e(S,_),e(_,K),e(K,tt),e(_,Q),e(Q,ot),e(_,z),e(z,at),e(_,J),e(J,st),e(_,V),e(V,lt),e(_,X),e(X,nt),e(_,Y),e(Y,rt),e(_,Z),e(Z,it),e(_,ee),e(ee,ct),p(t,ye,i),p(t,te,i),e(te,fe),e(fe,pt)},p:ro,d(t){t&&o(c),t&&o(b),t&&o(x),t&&o(h),t&&o(E),t&&o(de),t&&o(T),t&&o(he),t&&o(F),t&&o(Ee),t&&o(I),t&&o(me),t&&o(O),t&&o(ve),t&&o(M),t&&o(Ae),t&&o(d),t&&o(be),t&&o(q),t&&o(xe),t&&o(w),t&&o(ye),t&&o(te)}}}function po(k){let c,A;const b=[k[0],Vt];let x={$$slots:{default:[co]},$$scope:{ctx:k}};for(let u=0;u<b.length;u+=1)x=ut(x,b[u]);return c=new io({props:x}),{c(){eo(c.$$.fragment)},l(u){to(c.$$.fragment,u)},m(u,h){oo(c,u,h),A=!0},p(u,[h]){const E=h&1?ao(b,[h&1&&zt(u[0]),h&0&&zt(Vt)]):{};h&2&&(E.$$scope={dirty:h,ctx:u}),c.$set(E)},i(u){A||(so(c.$$.fragment,u),A=!0)},o(u){lo(c.$$.fragment,u),A=!1},d(u){no(c,u)}}}const Vt={description:"text-generation-webui Extension for AutoLLaMa",image:"/articles/pcb_buttons.png",layout:"project",repository:"https://github.com/lufixSch/text_generation_webui_auto_llama",repository_icon:"github",status:"wip",title:"AutoLLaMa (Text generation WebUI Extension)",update:"https://raw.githubusercontent.com/lufixSch/text_generation_webui_auto_llama/main/README.md"};function uo(k,c,A){return k.$$set=b=>{A(0,c=ut(ut({},c),Jt(b)))},c=Jt(c),[c]}class ho extends Xt{constructor(c){super(),Yt(this,c,uo,po,Zt,{})}}export{ho as default,Vt as metadata};
