import{S as Ot,i as qt,s as Bt,w as et,x as $t,y as Ht,z as Rt,A as jt,B as Tt,r as Ut,v as Wt,C as zt,D as Mt,e as a,t as n,a as y,c as o,b as l,d as r,f as s,g as P,E as f,h as re,j as p,k as e,n as Kt}from"./index.e23b10ae.js";import{A as Qt}from"./article.e19d21fa.js";function Gt(g){let c,v,m,A,u,h,E,me,ee,Ae,be,ie,C,xe,ce,L,ye,pe,F,te,Pe,ue,k,we,fe,d,Se,se,De,Ne,ae,ge,Ce,oe,Le,Fe,le,ke,_e,T,Te,de,w,S,N,M,Me,I,Ie,O,Oe,qe,b,q,Be,B,$e,$,He,H,Re,R,je,Ue,_,j,We,U,ze,W,Ke,z,Qe,K,Ge,Q,Je,G,Ve,J,Xe,V,Ye,he,X,ne,Ze;return{c(){c=a("h1"),v=n("AutoLLaMa (An Oobabooga text-generation-webui Extension)"),m=y(),A=a("p"),u=n("Run an Agent in the background which uses different tools to solve a given problem/question."),h=y(),E=a("p"),me=n("The Agent is triggered in the Chat mode by starting a message with "),ee=a("code"),Ae=n("/do"),be=n(". The Agent will then use the provided tools to solve the given problem and will add the results to the chat context."),ie=y(),C=a("h2"),xe=n("Tools"),ce=y(),L=a("h3"),ye=n("Existing Tools"),pe=y(),F=a("ul"),te=a("li"),Pe=n("Wikipedia"),ue=y(),k=a("h3"),we=n("Adding Tools"),fe=y(),d=a("p"),Se=n("New tools can be added by creating a new class which extends the "),se=a("code"),De=n("LLMInterface"),Ne=n(" class in the "),ae=a("code"),ge=n("llm"),Ce=n(" module. An instance of the new class must be added to the list of "),oe=a("code"),Le=n("tools"),Fe=n(" in "),le=a("code"),ke=n("script.py"),_e=y(),T=a("h2"),Te=n("Installation"),de=y(),w=a("pre"),S=a("code"),N=a("span"),M=a("span"),Me=n("cd"),I=a("span"),Ie=n(" "),O=a("span"),Oe=n("extensions"),qe=n(`
`),b=a("span"),q=a("span"),Be=n("clone"),B=a("span"),$e=n(" "),$=a("span"),He=n("https://github.com/lufixSch/text_generation_webui_auto_llama_.git"),H=a("span"),Re=n(" "),R=a("span"),je=n("auto_llama"),Ue=n(`
`),_=a("span"),j=a("span"),We=n("python"),U=a("span"),ze=n(" "),W=a("span"),Ke=n("server.py"),z=a("span"),Qe=n(" "),K=a("span"),Ge=n("--extensions"),Q=a("span"),Je=n(" "),G=a("span"),Ve=n("auto_llama"),J=a("span"),Xe=n(" "),V=a("span"),Ye=n("api"),he=y(),X=a("blockquote"),ne=a("p"),Ze=n("AutoLLaMa requires the API to be active. Make sure the API extension is enabled"),this.h()},l(t){c=o(t,"H1",{});var i=l(c);v=r(i,"AutoLLaMa (An Oobabooga text-generation-webui Extension)"),i.forEach(s),m=P(t),A=o(t,"P",{});var tt=l(A);u=r(tt,"Run an Agent in the background which uses different tools to solve a given problem/question."),tt.forEach(s),h=P(t),E=o(t,"P",{});var Ee=l(E);me=r(Ee,"The Agent is triggered in the Chat mode by starting a message with "),ee=o(Ee,"CODE",{});var st=l(ee);Ae=r(st,"/do"),st.forEach(s),be=r(Ee,". The Agent will then use the provided tools to solve the given problem and will add the results to the chat context."),Ee.forEach(s),ie=P(t),C=o(t,"H2",{});var at=l(C);xe=r(at,"Tools"),at.forEach(s),ce=P(t),L=o(t,"H3",{});var ot=l(L);ye=r(ot,"Existing Tools"),ot.forEach(s),pe=P(t),F=o(t,"UL",{});var lt=l(F);te=o(lt,"LI",{});var nt=l(te);Pe=r(nt,"Wikipedia"),nt.forEach(s),lt.forEach(s),ue=P(t),k=o(t,"H3",{});var rt=l(k);we=r(rt,"Adding Tools"),rt.forEach(s),fe=P(t),d=o(t,"P",{});var D=l(d);Se=r(D,"New tools can be added by creating a new class which extends the "),se=o(D,"CODE",{});var it=l(se);De=r(it,"LLMInterface"),it.forEach(s),Ne=r(D," class in the "),ae=o(D,"CODE",{});var ct=l(ae);ge=r(ct,"llm"),ct.forEach(s),Ce=r(D," module. An instance of the new class must be added to the list of "),oe=o(D,"CODE",{});var pt=l(oe);Le=r(pt,"tools"),pt.forEach(s),Fe=r(D," in "),le=o(D,"CODE",{});var ut=l(le);ke=r(ut,"script.py"),ut.forEach(s),D.forEach(s),_e=P(t),T=o(t,"H2",{});var ft=l(T);Te=r(ft,"Installation"),ft.forEach(s),de=P(t),w=o(t,"PRE",{class:!0,style:!0,tabindex:!0});var _t=l(w);S=o(_t,"CODE",{});var Y=l(S);N=o(Y,"SPAN",{class:!0});var ve=l(N);M=o(ve,"SPAN",{style:!0});var dt=l(M);Me=r(dt,"cd"),dt.forEach(s),I=o(ve,"SPAN",{style:!0});var ht=l(I);Ie=r(ht," "),ht.forEach(s),O=o(ve,"SPAN",{style:!0});var Et=l(O);Oe=r(Et,"extensions"),Et.forEach(s),ve.forEach(s),qe=r(Y,`
`),b=o(Y,"SPAN",{class:!0});var Z=l(b);q=o(Z,"SPAN",{style:!0});var vt=l(q);Be=r(vt,"clone"),vt.forEach(s),B=o(Z,"SPAN",{style:!0});var mt=l(B);$e=r(mt," "),mt.forEach(s),$=o(Z,"SPAN",{style:!0});var At=l($);He=r(At,"https://github.com/lufixSch/text_generation_webui_auto_llama_.git"),At.forEach(s),H=o(Z,"SPAN",{style:!0});var bt=l(H);Re=r(bt," "),bt.forEach(s),R=o(Z,"SPAN",{style:!0});var xt=l(R);je=r(xt,"auto_llama"),xt.forEach(s),Z.forEach(s),Ue=r(Y,`
`),_=o(Y,"SPAN",{class:!0});var x=l(_);j=o(x,"SPAN",{style:!0});var yt=l(j);We=r(yt,"python"),yt.forEach(s),U=o(x,"SPAN",{style:!0});var Pt=l(U);ze=r(Pt," "),Pt.forEach(s),W=o(x,"SPAN",{style:!0});var wt=l(W);Ke=r(wt,"server.py"),wt.forEach(s),z=o(x,"SPAN",{style:!0});var St=l(z);Qe=r(St," "),St.forEach(s),K=o(x,"SPAN",{style:!0});var Dt=l(K);Ge=r(Dt,"--extensions"),Dt.forEach(s),Q=o(x,"SPAN",{style:!0});var Nt=l(Q);Je=r(Nt," "),Nt.forEach(s),G=o(x,"SPAN",{style:!0});var gt=l(G);Ve=r(gt,"auto_llama"),gt.forEach(s),J=o(x,"SPAN",{style:!0});var Ct=l(J);Xe=r(Ct," "),Ct.forEach(s),V=o(x,"SPAN",{style:!0});var Lt=l(V);Ye=r(Lt,"api"),Lt.forEach(s),x.forEach(s),Y.forEach(s),_t.forEach(s),he=P(t),X=o(t,"BLOCKQUOTE",{});var Ft=l(X);ne=o(Ft,"P",{});var kt=l(ne);Ze=r(kt,"AutoLLaMa requires the API to be active. Make sure the API extension is enabled"),kt.forEach(s),Ft.forEach(s),this.h()},h(){f(M,"color","#88C0D0"),f(I,"color","#D8DEE9FF"),f(O,"color","#A3BE8C"),re(N,"class","line"),f(q,"color","#88C0D0"),f(B,"color","#D8DEE9FF"),f($,"color","#A3BE8C"),f(H,"color","#D8DEE9FF"),f(R,"color","#A3BE8C"),re(b,"class","line"),f(j,"color","#88C0D0"),f(U,"color","#D8DEE9FF"),f(W,"color","#A3BE8C"),f(z,"color","#D8DEE9FF"),f(K,"color","#A3BE8C"),f(Q,"color","#D8DEE9FF"),f(G,"color","#A3BE8C"),f(J,"color","#D8DEE9FF"),f(V,"color","#A3BE8C"),re(_,"class","line"),re(w,"class","shiki nord"),f(w,"background-color","#2e3440ff"),re(w,"tabindex","0")},m(t,i){p(t,c,i),e(c,v),p(t,m,i),p(t,A,i),e(A,u),p(t,h,i),p(t,E,i),e(E,me),e(E,ee),e(ee,Ae),e(E,be),p(t,ie,i),p(t,C,i),e(C,xe),p(t,ce,i),p(t,L,i),e(L,ye),p(t,pe,i),p(t,F,i),e(F,te),e(te,Pe),p(t,ue,i),p(t,k,i),e(k,we),p(t,fe,i),p(t,d,i),e(d,Se),e(d,se),e(se,De),e(d,Ne),e(d,ae),e(ae,ge),e(d,Ce),e(d,oe),e(oe,Le),e(d,Fe),e(d,le),e(le,ke),p(t,_e,i),p(t,T,i),e(T,Te),p(t,de,i),p(t,w,i),e(w,S),e(S,N),e(N,M),e(M,Me),e(N,I),e(I,Ie),e(N,O),e(O,Oe),e(S,qe),e(S,b),e(b,q),e(q,Be),e(b,B),e(B,$e),e(b,$),e($,He),e(b,H),e(H,Re),e(b,R),e(R,je),e(S,Ue),e(S,_),e(_,j),e(j,We),e(_,U),e(U,ze),e(_,W),e(W,Ke),e(_,z),e(z,Qe),e(_,K),e(K,Ge),e(_,Q),e(Q,Je),e(_,G),e(G,Ve),e(_,J),e(J,Xe),e(_,V),e(V,Ye),p(t,he,i),p(t,X,i),e(X,ne),e(ne,Ze)},p:Kt,d(t){t&&s(c),t&&s(m),t&&s(A),t&&s(h),t&&s(E),t&&s(ie),t&&s(C),t&&s(ce),t&&s(L),t&&s(pe),t&&s(F),t&&s(ue),t&&s(k),t&&s(fe),t&&s(d),t&&s(_e),t&&s(T),t&&s(de),t&&s(w),t&&s(he),t&&s(X)}}}function Jt(g){let c,v;const m=[g[0],It];let A={$$slots:{default:[Gt]},$$scope:{ctx:g}};for(let u=0;u<m.length;u+=1)A=et(A,m[u]);return c=new Qt({props:A}),{c(){$t(c.$$.fragment)},l(u){Ht(c.$$.fragment,u)},m(u,h){Rt(c,u,h),v=!0},p(u,[h]){const E=h&1?jt(m,[h&1&&Tt(u[0]),h&0&&Tt(It)]):{};h&2&&(E.$$scope={dirty:h,ctx:u}),c.$set(E)},i(u){v||(Ut(c.$$.fragment,u),v=!0)},o(u){Wt(c.$$.fragment,u),v=!1},d(u){zt(c,u)}}}const It={description:"Extension for the text-generation-webui that allows users to run an LLM agent in the background, using various tools to solve problems or answer questions",image:"/articles/pcb_buttons.png",layout:"project",repository:"https://github.com/lufixSch/text_generation_webui_auto_llama",repository_icon:"github",status:"wip",title:"AutoLLaMa (Text generation WebUI Extension)",update:"https://raw.githubusercontent.com/lufixSch/text_generation_webui_auto_llama/main/README.md"};function Vt(g,c,v){return g.$$set=m=>{v(0,c=et(et({},c),Mt(m)))},c=Mt(c),[c]}class Zt extends Ot{constructor(c){super(),qt(this,c,Vt,Jt,Bt,{})}}export{Zt as default,It as metadata};
